import React from "react";

// Definimos uma interface para padronizar os tutoriais
export interface TutorialItem {
  id: string;
  title: string;
  description: string;
  content: string | React.ReactNode; // pode ser texto simples ou JSX
  category?: string;
}

// Aqui dentro colocamos os tutoriais em formato JSON
export const tutorialData: Record<string, TutorialItem> = {
  esconderGraficos: {
    id: "esconderGraficos",
    title: "Esconder Gr√°ficos",
    description: "Oculte todos os gr√°ficos para facilitar a navega√ß√£o visual.",
    content: (
      <>
        <p>
          Para ocultar todos os gr√°ficos na tela, basta clicar no bot√£o <strong>"Esconder Gr√°ficos"</strong>.
        </p>
        <p className="mt-2">
          Essa funcionalidade √© √∫til quando voc√™ deseja focar apenas nos dados textuais ou fazer uma leitura simplificada das informa√ß√µes.
        </p>
        <ul className="list-disc pl-5 mt-2 space-y-1">
          <li>Ocultamento global dos gr√°ficos</li>
          <li>Interface mais limpa</li>
          <li>Ideal para relat√≥rios ou apresenta√ß√µes r√°pidas</li>
        </ul>
      </>
    ),
  },
  telaCheia: {
    id: "telaCheia",
    title: "Tela Cheia",
    description: "Ative o modo de tela cheia para visualizar os dados em tela inteira.",
    content: (
      <>
        <p>
          Clique no √≠cone <strong>Tela Cheia</strong> localizado no canto superior direito do painel para expandir a interface ao m√°ximo.
        </p>
        <p className="mt-2">
          Este recurso √© ideal para an√°lises detalhadas, apresenta√ß√µes ou quando desejar utilizar toda a √°rea do monitor sem distra√ß√µes.
        </p>
        <div className="bg-blue-50 dark:bg-blue-900 p-3 rounded mt-4 text-sm">
          üí° <strong>Dica:</strong> Pressione ESC para sair do modo tela cheia.
        </div>
      </>
    ),
  },
  baixarGraficos: {
    id: "baixarGraficos",
    title: "Baixar os Gr√°ficos",
    description: "Baixe os gr√°ficos em formato de imagem para uso externo ou relat√≥rios.",
    content: (
      <>
        <p>
          Para baixar um gr√°fico, clique no bot√£o de download localizado no canto superior direito de cada gr√°fico.
        </p>
        <ol className="list-decimal pl-5 mt-2 space-y-1">
          <li>Clique no √≠cone de download no gr√°fico desejado.</li>
          <li>Selecione o formato de sa√≠da.</li>
          <li>Salve o arquivo no seu dispositivo.</li>
        </ol>
      </>
    ),
  },
  quadro: {
    id: "quadro",
    title: "Quadro Interativo",
    description: "Monte seu pr√≥prio painel de an√°lise com gr√°ficos, anota√ß√µes e desenhos.",
    content: (
      <>
        <p>
          O Quadro √© uma ferramenta interativa onde voc√™ pode montar seu pr√≥prio painel personalizado de an√°lise.
        </p>

        <h3 className="font-semibold mt-4">Como usar:</h3>
        <ol className="list-decimal pl-5 mt-2 space-y-2">
          <li><strong>Crie um novo quadro:</strong> Clique no bot√£o ‚ÄúNovo Quadro‚Äù no menu lateral ou no topo da p√°gina.</li>
          <li><strong>Adicione gr√°ficos:</strong> Arraste e solte gr√°ficos existentes para dentro do quadro.</li>
          <li><strong>Fa√ßa anota√ß√µes:</strong> Use as ferramentas de escrita e marca√ß√£o para adicionar coment√°rios ou destaques.</li>
          <li><strong>Desenhe:</strong> Ative a ferramenta de caneta para desenhar setas, formas ou linhas diretamente sobre os gr√°ficos.</li>
          <li><strong>Salve seu trabalho:</strong> Clique em ‚ÄúSalvar‚Äù para guardar seu quadro e acess√°-lo posteriormente.</li>
        </ol>

        <div className="bg-green-50 dark:bg-green-900 p-3 rounded mt-4 text-sm">
          ‚úÖ <strong>Dica Pro:</strong> Voc√™ pode organizar m√∫ltiplos quadros por tema ou projeto!
        </div>
      </>
    ),
  },
};

// Contexto opcional (para escalabilidade futura)
export const TutorialContext = React.createContext(tutorialData);

// Hook customizado para acessar tutoriais facilmente
export const useTutorial = () => React.useContext(TutorialContext);

// Componente provedor (√∫til se quiser carregar tutoriais via API futuramente)
export const TutorialProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  return (
    <TutorialContext.Provider value={tutorialData}>
      {children}
    </TutorialContext.Provider>
  );
};